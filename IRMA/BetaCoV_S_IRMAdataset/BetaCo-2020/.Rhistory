ls
getwd()
library(ggplot2)
install.packages("tidyverse")
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
clear
print(hello world)
print("hello world")
rm(list = ls())
reticulate::repl_python()
install.packages(c("boot", "class", "foreign", "KernSmooth", "MASS", "nnet", "spatial"))
install.packages("velox")
# install.packages("mapview")
# install.packages("spatstat")
# install.packages("tmaptools")
# install.packages("elevatr")
# install.packages("rgbif")
# install.packages("remotes")
# remotes::install_github("Nowosad/spDataLarge")
# install.packages("spData")
# install.packages("gstat")
# install.packages("fields")
install.packages("foreign")
install.packages("velox")
install.packages("~/Downloads/velox_0.2.0.tar.gz", repos = NULL, type = "source")
install.packages(c("elevatr", "ggplot2", "mapview", "raster", "sp", "tmaptools"))
ls
getwd()
setwd("~/Documents/COVID19/BetaCo-2020/")
data = read.tsv("Betacoranvirus-fullmeta.tsv", header = TRUE)
data = read.csv("Betacoranvirus-fullmeta.csv.csv", header = TRUE)
data = read.csv("Betacoranvirus-fullmeta.csv", header = TRUE)
## String based
Spike = subset(data, grepl("spike|S_protein|(S)_gene", GenBank_Title) , drop = TRUE)
## String based
Spike = subset(data, grepl("spike|S_protein|(S)_gene", definition, organism, gene) , drop = TRUE)
View(Spike)
View(Spike)
Spike = subset(data, grepl("spike|S_protein|(S)_gene", definition, organism, gene) , drop = TRUE)
Spike = subset(data, grepl("spike|S_protein|(S)_gene", definition, organism, gene) , drop = TRUE)
write.csv(Spike, row.names = FALSE, "Betaco.spike.csv")
OC43 = subset(data, grepl("0C43", definition, organism, gene) , drop = TRUE)
write.csv( OC43, row.names = FALSE, "Betaco.0C43.csv")
OC43 = subset(data, grepl("OC43", definition, organism, gene) , drop = TRUE)
write.csv( OC43, row.names = FALSE, "Betaco.OC43.csv")
MERS = subset(data, grepl("MERS|Middle East", definition, organism, gene) , drop = TRUE)
write.csv( MERS, row.names = FALSE, "Betaco.MERS.csv")
BovCo = subset(data, grepl("Bovine", definition, organism, gene) , drop = TRUE)
write.csv( BovCo, row.names = FALSE, "Betaco.bovineco.csv")
BatCo = subset(data, grepl("Bat", definition, organism, gene) , drop = TRUE)
write.csv( BatCo, row.names = FALSE, "Betaco.batco.csv")
BatCo = subset(data, grepl("Bat|BtCo", definition, organism, gene) , drop = TRUE)
write.csv( BatCo, row.names = FALSE, "Betaco.batco.csv")
OtherCo = subset(data, grepl("Deer|Hedgehog|Camel|Waterbuck|Murine|mouse|Giraffe|Antelope", definition, organism, gene) , drop = TRUE)
write.csv( OtherCo, row.names = FALSE, "Betaco.otherco.csv")
HKU = subset(data, grepl("HKU", definition, organism, gene) , drop = TRUE)
write.csv(HKU, row.names = FALSE, "Betaco.HKU.csv")
SARS = subset(data, grepl("SARS|Severe acute", definition, organism, gene) , drop = TRUE)
write.csv( SARS, row.names = FALSE, "Betaco.SARS.csv")
